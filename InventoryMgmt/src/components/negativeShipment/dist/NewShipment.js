"use strict";
exports.__esModule = true;
require("./filterabletable.css");
var custom_select_1 = require("../common/select/custom-select/custom-select");
var data_1 = require("../common/select/custom-select/data");
var react_datepicker_1 = require("react-datepicker");
require("react-datepicker/dist/react-datepicker.css");
var react_1 = require("react");
function NewShipments() {
    var _a = react_1.useState('tabs-1'), activeTabId = _a[0], setActiveTabId = _a[1];
    var _b = react_1.useState('collapseOne'), activeAccordian = _b[0], setActiveAccordian = _b[1];
    var _c = react_1.useState(null), startDate = _c[0], setStartDate = _c[1];
    var _d = react_1.useState(null), ETD = _d[0], setETD = _d[1];
    var _e = react_1.useState(null), placeDelevery = _e[0], setPlaceDelivery = _e[1];
    var _f = react_1.useState(null), ETA = _f[0], setETA = _f[1];
    var _g = react_1.useState(null), finalETA = _g[0], setFinaleta = _g[1];
    var _h = react_1.useState(null), releaseDate = _h[0], setReleasedDate = _h[1];
    var _j = react_1.useState(''), fileNo = _j[0], setFileNo = _j[1];
    var _k = react_1.useState(''), mblno = _k[0], setMblNo = _k[1];
    var _l = react_1.useState({ id: "AL", value: "AL", label: "Alabama" }), Office = _l[0], setOffice = _l[1];
    var _m = react_1.useState(), OBLType = _m[0], setOblType = _m[1];
    var _o = react_1.useState(''), postdate = _o[0], setPostDate = _o[1];
    var _p = react_1.useState(''), overseaAgent = _p[0], setOverseaAgent = _p[1];
    var _q = react_1.useState(''), carrier = _q[0], setCarrier = _q[1];
    var _r = react_1.useState({}), BLAcctcarrier = _r[0], setBLAcctcarrier = _r[1];
    var _s = react_1.useState({}), forwardingAgent = _s[0], setforwardingAgent = _s[1];
    var _t = react_1.useState({}), coloader = _t[0], setColoader = _t[1];
    var _u = react_1.useState({}), agentRefNo = _u[0], setAgentRefNo = _u[1];
    var _v = react_1.useState(''), subBLNo = _v[0], setSubBLNo = _v[1];
    var _w = react_1.useState({}), OP = _w[0], setOP = _w[1];
    var _x = react_1.useState(false), directMaster = _x[0], setDirectMaster = _x[1];
    var _y = react_1.useState({}), vessel = _y[0], setVessel = _y[1];
    var _z = react_1.useState(''), voyage = _z[0], setVoyoge = _z[1];
    var _0 = react_1.useState({}), CYlocation = _0[0], setCYLocation = _0[1];
    var _1 = react_1.useState({}), CFSLocation = _1[0], setCFSLocation = _1[1];
    var _2 = react_1.useState({}), portloading = _2[0], setPortofloading = _2[1];
    var _3 = react_1.useState(''), PortofDischarge = _3[0], setPortofDischarge = _3[1];
    var _4 = react_1.useState({}), placeofDelivery = _4[0], setPlaceofDelivery = _4[1];
    var _5 = react_1.useState({}), finalDestination = _5[0], setFinalDestination = _5[1];
    var _6 = react_1.useState({}), freight = _6[0], setFreight = _6[1];
    var _7 = react_1.useState(''), shipmode = _7[0], setShipmode = _7[1];
    var _8 = react_1.useState({}), serviceTerm1 = _8[0], setServiceTerm1 = _8[1];
    var _9 = react_1.useState({}), serviceTerm2 = _9[0], setServiceTerm2 = _9[1];
    var _10 = react_1.useState({}), containerQty = _10[0], setContainerQty = _10[1];
    var _11 = react_1.useState({}), businessReferredBy = _11[0], setBusinessReferredBy = _11[1];
    return (React.createElement("div", { style: { margin: '45px 0px 0px 45px' } },
        React.createElement("div", { className: "top-header tp-header" },
            React.createElement("div", null,
                React.createElement("img", { style: { height: '17px', width: '17px', cursor: 'pointer', marginLeft: '10px' }, src: '../../../src/assets/home.svg' })),
            React.createElement("div", { className: 'breadscrumb-text' },
                "Home ",
                React.createElement("img", { className: "arrow-right", src: '../../../src/assets/right-arrow.svg' })),
            React.createElement("div", { className: 'breadscrumb-text' },
                "Ocean Import ",
                React.createElement("img", { className: "arrow-right", src: '../../../src/assets/right-arrow.svg' })),
            React.createElement("div", { className: 'breadscrumb-text' }, "New Shipment")),
        React.createElement("div", { className: "mgl" },
            React.createElement("ul", { className: "nav nav-tabs tp-header", role: "tablist" },
                React.createElement("li", { className: "nav-item", onClick: function () { setActiveTabId('tabs-1'); } },
                    React.createElement("a", { className: activeTabId == "tabs-1" ? "nav-link active" : "nav-link", "data-toggle": "tab", href: "#tabs-1", role: "tab" }, "Basic")),
                React.createElement("li", { className: "nav-item", onClick: function () { setActiveTabId('tabs-2'); } },
                    React.createElement("a", { className: activeTabId == "tabs-2" ? "nav-link active" : "nav-link", "data-toggle": "tab", href: "#tabs-2", role: "tab" }, "Container & Item")),
                React.createElement("li", { className: "nav-item", onClick: function () { setActiveTabId('tabs-3'); } },
                    React.createElement("a", { className: activeTabId == "tabs-3" ? "nav-link active" : "nav-link", "data-toggle": "tab", href: "#tabs-3", role: "tab" }, "Accounting")),
                React.createElement("li", { className: "nav-item", onClick: function () { setActiveTabId('tabs-4'); } },
                    React.createElement("a", { className: activeTabId == "tabs-4" ? "nav-link active" : "nav-link", "data-toggle": "tab", href: "#tabs-1", role: "tab" }, "Doc Center")),
                React.createElement("li", { className: "nav-item", onClick: function () { setActiveTabId('tabs-5'); } },
                    React.createElement("a", { className: activeTabId == "tabs-5" ? "nav-link active" : "nav-link", "data-toggle": "tab", href: "#tabs-2", role: "tab" }, "Status"))),
            React.createElement("div", { className: "tab-content" },
                React.createElement("div", { className: activeTabId == "tabs-1" ? "tab-pane mlt active" : "tab-pane mlt p-3", id: "tabs-1", role: "tabpanel" },
                    React.createElement("div", { className: 'row' },
                        React.createElement("div", { className: 'col-md-10 col-sm-2 p-0' },
                            React.createElement("div", { className: "accordion", id: "accordionExample" },
                                React.createElement("div", { className: "accordion-item mt-2 accordion-container" },
                                    React.createElement("div", { className: "accordion-header", id: "headingOne", onClick: function () { setActiveAccordian('collapseOne'); } },
                                        React.createElement("div", { className: 'form-header-title' }, "MB/L Information"),
                                        React.createElement("div", null, activeAccordian == 'collapseOne' ? React.createElement("i", { className: "ri-arrow-down-s-line arrow" }) : React.createElement("img", { className: "accordion-arrow-left", src: "../../../src/assets/left-arrow.svg" }))),
                                    React.createElement("div", { id: "collapseOne", className: activeAccordian == 'collapseOne' ? "accordion-collapse collapse show" : "accordion-collapse collapse", "aria-labelledby": "headingOne", "data-bs-parent": "#accordionExample" },
                                        React.createElement("div", { className: 'space mb-2' },
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "File No")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'input-box', defaultValue: fileNo, onChange: function (e) { return setFileNo(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "MB/L No")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: mblno, onChange: function (e) { return setMblNo(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Office")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: Office, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setOffice(Office); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "OB/L Type")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setOblType(value); }, value: OBLType }))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Post Date")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'input-box', defaultValue: postdate, onChange: function (e) { return setPostDate(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "Oversea Agent")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: overseaAgent, onChange: function (e) { return setOverseaAgent(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "Carrier")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: carrier, onChange: function (e) { return setCarrier(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "B/L Acct. Carrier")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setBLAcctcarrier(value); }, value: BLAcctcarrier }))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Forwarding Agent")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: forwardingAgent, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setforwardingAgent(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Co-loader")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: coloader, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setColoader(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Agent Ref No.")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: agentRefNo, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setAgentRefNo(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Sub B/L No.")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: subBLNo, onChange: function (e) { return setSubBLNo(e.target.value); } }))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "OP")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: OP, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setOP(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Direct Master")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: "form-check-input", type: "checkbox", value: directMaster, onChange: function () { setDirectMaster(!directMaster); }, id: "flexCheckDefault" })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' }),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' }))),
                                        React.createElement("div", { className: 'space mb-2' },
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Vessel")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: vessel, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setVessel(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Voyage")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: voyage, onChange: function (e) { return setVoyoge(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "CY Location ")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: CYlocation, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setCYLocation(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "CFS Location ")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: CFSLocation, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setCFSLocation(value); } }))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Port of loading")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: portloading, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setPortofloading(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "ETD")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: ETD, onChange: function (date) { return setETD(date); }, required: true, form: "ETD" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "ETD" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' })))))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Port of Discharge")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: PortofDischarge, onChange: function (e) { return setPortofDischarge(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "ETA")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: ETA, onChange: function (date) { return setETA(date); }, required: true, form: "eta" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "eta" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' }))))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Place of Delivery")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: placeofDelivery, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setPlaceofDelivery(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4 p-0' },
                                                            React.createElement("label", { className: 'label-text' }, "Place of Delivery(ETA)")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: placeDelevery, onChange: function (date) { return setPlaceDelivery(date); }, required: true, form: "peta" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "peta" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' })))))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "Final Destination")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: finalDestination, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setFinalDestination(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "Final ETA")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: finalETA, onChange: function (date) { return setFinaleta(date); }, required: true, form: "final-ETA" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "final-ETA" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' })))))))),
                                        React.createElement("div", { className: 'space mb-2' },
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Freight")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: freight, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setFreight(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text text-primary' }, "Ship Mode")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("input", { className: 'mblbox', defaultValue: shipmode, onChange: function (e) { return setShipmode(e.target.value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Service Term")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement("div", { className: 'row' },
                                                                React.createElement("div", { className: 'col-6' },
                                                                    React.createElement(custom_select_1["default"], { value: serviceTerm1, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setServiceTerm1(value); } })),
                                                                React.createElement("div", { className: 'col-6' },
                                                                    React.createElement(custom_select_1["default"], { value: serviceTerm2, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setServiceTerm2(value); } })))))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Container/Qty")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: containerQty, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setContainerQty(value); } }))))),
                                            React.createElement("div", { className: 'row' },
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4 p-0' },
                                                            React.createElement("label", { className: 'label-text' }, "Telex release received")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: startDate, onChange: function (date) { return setStartDate(date); }, required: true, form: "telex" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "telex" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' })))))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4' },
                                                            React.createElement("label", { className: 'label-text' }, "Released Date")),
                                                        React.createElement("div", { className: 'col-8 p-0 row' },
                                                            React.createElement("div", { className: 'col-10' },
                                                                React.createElement(react_datepicker_1["default"], { selected: releaseDate, onChange: function (date) { return setReleasedDate(date); }, required: true, form: "released" })),
                                                            React.createElement("div", { className: 'col-2' },
                                                                React.createElement("form", { id: "released" },
                                                                    React.createElement("button", { type: "submit", className: 'date-icon bgt' })))))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' },
                                                    React.createElement("div", { className: 'row' },
                                                        React.createElement("div", { className: 'col-4 p-0' },
                                                            React.createElement("label", { className: 'label-text' }, "Business Referred By")),
                                                        React.createElement("div", { className: 'col-8 p-0' },
                                                            React.createElement(custom_select_1["default"], { value: businessReferredBy, options: data_1.stateOptions, fetchingData: false, onChange: function (value) { setBusinessReferredBy(value); } })))),
                                                React.createElement("div", { className: 'col-md-3 col-sm-12' }))),
                                        React.createElement("div", { className: "d-flex justify-content-center" },
                                            React.createElement("button", { className: 'save' }, "save")))),
                                React.createElement("div", { className: "accordion-item" },
                                    React.createElement("div", { className: "accordion-header", id: "headingTwo", onClick: function () { setActiveAccordian('collapseTwo'); } },
                                        React.createElement("div", { className: 'form-header-title' }),
                                        React.createElement("div", null, activeAccordian == 'collapseTwo' ? React.createElement("i", { className: "ri-arrow-down-s-line arrow" }) : React.createElement("img", { className: "accordion-arrow-left", src: "../../../src/assets/left-arrow.svg" }))),
                                    React.createElement("div", { id: "collapseTwo", className: activeAccordian == 'collapseTwo' ? "accordion-collapse collapse show" : "accordion-collapse collapse", "aria-labelledby": "headingTwo", "data-bs-parent": "#accordionExample" },
                                        React.createElement("div", { className: "accordion-body" },
                                            React.createElement("strong", null, "This is the second item's accordion body."),
                                            " It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the ",
                                            React.createElement("code", null, ".accordion-body"),
                                            ", though the transition does limit overflow."))),
                                React.createElement("div", { className: "accordion-item" },
                                    React.createElement("div", { className: "accordion-header", id: "headingThree", onClick: function () { setActiveAccordian('collapseThree'); } },
                                        React.createElement("div", { className: 'form-header-title' }),
                                        React.createElement("div", null, activeAccordian == 'collapseThree' ? React.createElement("i", { className: "ri-arrow-down-s-line arrow" }) : React.createElement("img", { className: "accordion-arrow-left", src: "../../../src/assets/left-arrow.svg" }))),
                                    React.createElement("div", { id: "collapseThree", className: activeAccordian == 'collapseThree' ? "accordion-collapse collapse show" : "accordion-collapse collapse", "aria-labelledby": "headingThree", "data-bs-parent": "#accordionExample" },
                                        React.createElement("div", { className: "accordion-body" },
                                            React.createElement("strong", null, "This is the third item's accordion body."),
                                            " It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the ",
                                            React.createElement("code", null, ".accordion-body"),
                                            ", though the transition does limit overflow."))))),
                        React.createElement("div", { className: 'col-md-2 col-sm-2 p-0' },
                            React.createElement("div", { className: 'add-hbl-button' }, "+ Add MB/L")))),
                React.createElement("div", { className: activeTabId == "tabs-2" ? "tab-pane  active" : "tab-pane p-3", id: "tabs-2", role: "tabpanel" },
                    React.createElement("div", { className: "accordion-header" })),
                React.createElement("div", { className: activeTabId == "tabs-3" ? "tab-pane  active" : "tab-pane p-3", id: "tabs-3", role: "tabpanel" },
                    React.createElement("div", { className: "accordion-header" })),
                React.createElement("div", { className: activeTabId == "tabs-4" ? "tab-pane  active" : "tab-pane p-3", id: "tabs-3", role: "tabpanel" },
                    React.createElement("div", { className: "accordion-header" }))))));
}
exports["default"] = NewShipments;
